version: '3.8'
services:
  ai:
    build:
      context: ./AI
      dockerfile: Dockerfile
    image: ai
    container_name: ai
    ports:
      - 8010:8010
    networks:
      - intern
    depends_on:
      backend:
        condition: service_healthy

    restart: unless-stopped

  postgresql:
    image: postgres:14
    container_name: database
    ports:
      - 5432:5432
    env_file:
      - ./dockercompose/env/postgres.env
    networks:
      - intern

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend
    container_name: backend
    depends_on:
      - postgresql
    ports:
      - 8080:8080
    env_file:
      - ./dockercompose/env/backend.env
    networks:
      - intern
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/ready']
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 20s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend
    container_name: frontend
    ports:
      - 3000:3000
    env_file:
      - ./dockercompose/env/frontend.env
    depends_on:
      - backend
    networks:
      - intern

networks:
  intern:
    driver: bridge
